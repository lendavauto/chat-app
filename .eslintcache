[{"C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\Sidebar.js":"3","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\SidebarChat.js":"4","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\Chat.js":"5","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\firebase.js":"6","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\Login.js":"7","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\reducer.js":"8","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\StateProvider.js":"9"},{"size":408,"mtime":1609860102787,"results":"10","hashOfConfig":"11"},{"size":1236,"mtime":1609866894910,"results":"12","hashOfConfig":"11"},{"size":3328,"mtime":1609867514211,"results":"13","hashOfConfig":"11"},{"size":2381,"mtime":1609864286254,"results":"14","hashOfConfig":"11"},{"size":5860,"mtime":1610028372569,"results":"15","hashOfConfig":"11"},{"size":621,"mtime":1609843918903,"results":"16","hashOfConfig":"11"},{"size":1926,"mtime":1610027092513,"results":"17","hashOfConfig":"11"},{"size":333,"mtime":1609860109515,"results":"18","hashOfConfig":"11"},{"size":382,"mtime":1609860292212,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vnz31q",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\index.js",[],["44","45"],"C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\App.js",["46","47"],"import React,{useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Chat from './components/Chat';\nimport Login from './components/Login';\nimport Sidebar from './components/Sidebar';\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <AppWrapper>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className='app__body'>\n          <Router>\n            <Sidebar />\n\n            <Switch>\n              <Route path='/rooms/:roomID'>\n                <Chat />\n              </Route>\n\n              <Route path='/'>\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </AppWrapper>\n  );\n}\n\nexport default App;\n\nconst AppWrapper = styled.div`\n  display: grid;\n  place-items: center;\n  background: #f0eeea;\n  height: 100vh;\n  \n  .app__body {\n    display: flex;\n    height: 90vh;\n    width: 90vw;\n    background: #b0a592;\n    -webkit-box-shadow: 5px 5px 13px -1px rgba(0, 0, 0, 0.7);\n    box-shadow: 5px 5px 13px -1px rgba(0, 0, 0, 0.7);\n    margin-top: -50px;\n    border: 1px solid #55442d;\n  }\n`;\n","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\Sidebar.js",["48"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { BsChatSquareDots } from 'react-icons/bs';\r\nimport { RiMore2Line } from 'react-icons/ri';\r\nimport { VscHistory, VscSearch } from 'react-icons/vsc';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from '../firebase';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nconst Sidebar = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      );\r\n    });\r\n    // cleanup\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SidebarWrapper>\r\n      <div className='sidebar__header'>\r\n        <Avatar\r\n          className='sidebar__headerIcon'\r\n          src={user?.photoURL}\r\n        />\r\n        <div className='sidebar__headerRight'>\r\n          <VscHistory className='sidebar__headerRightIcon' />\r\n          <BsChatSquareDots className='sidebar__headerRightIcon' />\r\n          <RiMore2Line className='sidebar__headerRightIcon' />\r\n        </div>\r\n      </div>\r\n      <div className='sidebar__search'>\r\n        <div className='sidebar__searchContainer'>\r\n          <VscSearch className='sidebar__searchIcon' />\r\n          <input type='text' placeholder='Search or start a new chat' />\r\n        </div>\r\n      </div>\r\n      <div className='sidebar__chats'>\r\n        <SidebarChat addNewChat />\r\n        {rooms.map((room) => {\r\n          return (\r\n            <SidebarChat\r\n              key={room.id}\r\n              id={room.id}\r\n              name={room.data.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </SidebarWrapper>\r\n  );\r\n};\r\n\r\nconst SidebarWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0.35;\r\n\r\n  .sidebar__header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    border-right: 1px solid #55442d;\r\n  }\r\n  .sidebar__headerIcon {\r\n    border: 1px solid gray;\r\n  }\r\n  .sidebar__searchContainer {\r\n    display: flex;\r\n    align-items: center;\r\n    background: white;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    border: 1px solid #b0a592;\r\n  }\r\n  .sidebar__search {\r\n    display: flex;\r\n    align-items: center;\r\n    background: #f0eeea;\r\n    height: 39px;\r\n    padding: 10px;\r\n    border-right: 1px solid #55442d;\r\n    border-top: 1px solid #55442d;\r\n\r\n    input {\r\n      padding: 1rem;\r\n      outline: none;\r\n      border: none;\r\n      margin-left: 10px;\r\n      color: gray;\r\n    }\r\n  }\r\n  .sidebar__chats {\r\n    flex: 1;\r\n    overflow: scroll;\r\n    border-top: 1px solid #55442d;\r\n    border-right: 1px solid #55442d;\r\n    cursor: pointer;\r\n  }\r\n  .sidebar__headerRight {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1.5rem;\r\n    justify-content: space-between;\r\n    min-width: 10vw;\r\n    color: #55442d;\r\n    cursor: pointer;\r\n  }\r\n  .sidebar__headerRightIcon {\r\n    margin-right: 2vw;\r\n    &:hover {\r\n      color: #221100;\r\n    }\r\n  }\r\n  .sidebar__searchIcon {\r\n    font-size: 1.5rem;\r\n    color: #55442d;\r\n    margin-left: 6px;\r\n  }\r\n`;\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\SidebarChat.js",[],"C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\Chat.js",["49"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { RiMore2Line } from 'react-icons/ri';\r\nimport { BsMic, BsPaperclip } from 'react-icons/bs';\r\nimport { VscSearch } from 'react-icons/vsc';\r\nimport { GrEmoji } from 'react-icons/gr';\r\nimport { useParams } from 'react-router';\r\nimport db from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nconst Chat = () => {\r\n  const [seed, setSeed] = useState('');\r\n  const [input, setInput] = useState('');\r\n  const { roomID } = useParams();\r\n  const [roomName, setRoomName] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomID]);\r\n\r\n  useEffect(() => {\r\n    if (roomID) {\r\n      // set room name\r\n      db.collection('rooms')\r\n        .doc(roomID)\r\n        .onSnapshot((snapshot) => {\r\n          setRoomName(snapshot.data().name);\r\n        });\r\n      // pull messages\r\n      db.collection('rooms')\r\n        .doc(roomID)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) => {\r\n          setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [roomID]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    db.collection('rooms').doc(roomID).collection('messages').add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <div className='chat__header'>\r\n        <Avatar\r\n          src={`https://avatars.dicebear.com/4.5/api/gridy/${seed}.svg`}\r\n        />\r\n        <div className='chat__headerInfo'>\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n        <div className='chat__headerRight'>\r\n          <VscSearch className='chat__headerIcon' />\r\n          <BsPaperclip className='chat__headerIcon' />\r\n          <RiMore2Line className='chat__headerIcon' />\r\n        </div>\r\n      </div>\r\n      <div className='chat__body'>\r\n        {/* render messages  */}\r\n        {messages.map((message) => {\r\n          return (\r\n            <p\r\n              className={`chat__message ${\r\n                message.name === user.displayName && 'chat__receiver'\r\n              }`}\r\n            >\r\n              <span className='chat__messageName'>{message.name}</span>\r\n              {message.message}\r\n              <span className='chat__timestamp'>\r\n                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n              </span>\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className='chat__footer'>\r\n        <GrEmoji className='chat__footerIcon' />\r\n        <form action='submit'>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            type='text'\r\n            placeholder='Type a message'\r\n          />\r\n          <button type='submit' onClick={sendMessage}>\r\n            Send\r\n          </button>\r\n          <BsMic className='chat__footerIcon' />\r\n        </form>\r\n      </div>\r\n    </ChatWrapper>\r\n  );\r\n};\r\n\r\nconst ChatWrapper = styled.div`\r\n  flex: 0.65;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .chat__header {\r\n    display: flex;\r\n    padding: 21px;\r\n    align-items: center;\r\n    border-bottom: 1px solid #55442d;\r\n    @media (max-width: 768px) {\r\n      flex-direction: column;\r\n    }\r\n\r\n    h3 {\r\n      font-size: 1rem;\r\n      font-weight: 500;\r\n      color: #222;\r\n      margin-bottom: 3px;\r\n    }\r\n    p {\r\n      font-size: 0.75rem;\r\n      font-weight: 300;\r\n      color: #f0eeea;\r\n    }\r\n  }\r\n  .chat__headerIcon {\r\n    font-size: 1.5rem;\r\n    color: #55442d;\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #221100;\r\n    }\r\n  }\r\n  .chat__headerInfo {\r\n    flex: 1;\r\n    padding-left: 20px;\r\n  }\r\n  .chat__headerRight {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    min-width: 100px;\r\n  }\r\n  .chat__body {\r\n    flex: 1;\r\n    padding: 30px;\r\n    overflow: scroll;\r\n    background: #e3d8c5;\r\n  }\r\n  .chat__message {\r\n    position: relative;\r\n    font-size: 0.9rem;\r\n    padding: 10px;\r\n    background: #f0eeea;\r\n    border-radius: 6px;\r\n    font-weight: 300;\r\n    margin-bottom: 1.8rem;\r\n    width: fit-content;\r\n  }\r\n  .chat__messageName {\r\n    position: absolute;\r\n    top: -17px;\r\n    font-weight: 500;\r\n    font-size: 0.8rem;\r\n  }\r\n  .chat__timestamp {\r\n    margin-left: 10px;\r\n    font-size: 0.6rem;\r\n  }\r\n  .chat__receiver {\r\n    margin-left: auto;\r\n    background: #dcf8c6;\r\n  }\r\n  .chat__footer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n    border-top: 1px solid #55442d;\r\n    height: 50px;\r\n    form {\r\n      display: flex;\r\n      align-items: center;\r\n      flex: 1;\r\n      input {\r\n        flex: 1;\r\n        border-radius: 10px;\r\n        border: none;\r\n        background: #f0eeea;\r\n        padding: 10px;\r\n        @media (max-width: 768px) {\r\n          width: 100%;\r\n        }\r\n      }\r\n      button {\r\n        font-size: 1rem;\r\n        padding: 10px;\r\n        border-radius: 6px;\r\n        border: none;\r\n        background: #d4af37;\r\n        color: #55442d;\r\n        cursor: pointer;\r\n        display: none;\r\n        &:hover {\r\n          background: #ffe26a;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .chat__footerIcon {\r\n    font-size: 1.5rem;\r\n    color: #55442d;\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    &:hover {\r\n      color: #221100;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Chat;\r\n","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\firebase.js",["50"],"import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDZLD_51diMcEWq60ZwteO5vhCSCrD42x4',\r\n  authDomain: 'my-chat-app-93688.firebaseapp.com',\r\n  projectId: 'my-chat-app-93688',\r\n  storageBucket: 'my-chat-app-93688.appspot.com',\r\n  messagingSenderId: '366238640963',\r\n  appId: '1:366238640963:web:edeb0c0a763b20a8969df6',\r\n  measurementId: 'G-2TSB3P6TJ3',\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\components\\Login.js",["51","52"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport bcgImg from '../images/meeting.png';\r\nimport { auth, provider } from '../firebase';\r\nimport { useStateValue } from '../StateProvider';\r\nimport { actionTypes } from '../reducer';\r\n\r\nconst Login = () => {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <div className='login__container'>\r\n        <img className='login__img' src={bcgImg} alt='login image' />\r\n        <div className='login__text'>\r\n          <h1>Sign in to start chatting</h1>\r\n        </div>\r\n        <button onClick={signIn}>Sign in with Google</button>\r\n      </div>\r\n    </LoginWrapper>\r\n  );\r\n};\r\n\r\nconst LoginWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: grid;\r\n  place-items: center;\r\n  background: #f0eeea;\r\n\r\n  .login__container {\r\n    padding: 100px;\r\n    text-align: center;\r\n    background: white;\r\n    border-radius: 6px;\r\n    -webkit-box-shadow: 5px 5px 13px 2px rgba(0, 0, 0, 0.3);\r\n    box-shadow: 5px 5px 13px 2px rgba(0, 0, 0, 0.3);\r\n    h1 {\r\n      margin-bottom: 1rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      border: none;\r\n      background: #f0eeea;\r\n      color: #55442d;\r\n      cursor: pointer;\r\n      -webkit-box-shadow: 5px 5px 13px 2px rgba(0, 0, 0, 0.2);\r\n      box-shadow: 5px 5px 13px 2px rgba(0, 0, 0, 0.3);\r\n      &:hover {\r\n        background: #55442d;\r\n        color: #f0eeea;\r\n      }\r\n    }\r\n  }\r\n  .login__img {\r\n    object-fit: contain;\r\n    height: 180px;\r\n    margin-bottom: 40px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\reducer.js",[],"C:\\Users\\Admin\\Desktop\\Projects\\React Practice\\Clever Programmer - WhatsApp\\my-chat-app\\src\\StateProvider.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":15,"nodeType":"59","messageId":"60","endLine":1,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":11,"column":18,"nodeType":"59","messageId":"60","endLine":11,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":13,"column":20,"nodeType":"59","messageId":"60","endLine":13,"endColumn":28},{"ruleId":"57","severity":1,"message":"61","line":19,"column":20,"nodeType":"59","messageId":"60","endLine":19,"endColumn":28},{"ruleId":"57","severity":1,"message":"62","line":15,"column":7,"nodeType":"59","messageId":"60","endLine":15,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":26,"column":9,"nodeType":"69","endLine":26,"endColumn":70},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'storage' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]